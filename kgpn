#!/bin/bash

session=`basename $KUBIE_SESSION`
pod=/tmp/kgpn_pod.$session
map=/tmp/kgpn_map.$session
age=/tmp/kgpn_age.$session
nodes=/tmp/kgpn_nodes.$session
kubectl get pod |awk '{print $1" "$3" "$NF}'|LC_ALL=C sort -k1 -s > $pod &
kubectl get pod -o=custom-columns=NAME:.metadata.name,NODE:.spec.nodeName,DAG:.metadata.labels.airflow_dag_name,PRIORITY:.spec.priorityClassName|sort -k2 -s > $map &
#kubectl get node |awk '{print $1" "$2" "$4}'|sort -k1 -s > $nodes &
kubectl get node |awk '{print $1" "$2}'|sed '1 s/NAME/NODE/g'|sort -k1 -s > $nodes &
kubectl get node -o=custom-columns="TYPE:metadata.labels['beta\.kubernetes\.io/instance-type'],NODE:metadata.labels['kubernetes\.io/hostname'], LIFECYCLE:metadata.labels['node\.kubernetes\.io/lifecycle'], NODEGROUP:metadata.labels['node\.kubernetes\.io/role'], EKSNODEGROUP:metadata.labels['eks\.amazonaws\.com/nodegroup']" |sort -k2 -s > $age.pre &

wait

#remove eks_nodegroup if it's all empty to save space
eks_nodegroup=`cat $age.pre |awk '{print $NF}'|uniq|tr -d '\n'`
if [ "$eks_nodegroup" == "<none>EKSNODEGROUP" ]
then
    awk 'NF{NF--};1' < $age.pre > $age
else
    cp $age.pre $age
fi

join -1 1 -2 2 $nodes $age|join -1 2 -2 1 -a 1 $map -|LC_ALL=C sort -k2 -s|join -1 1 -2 2 -a 1 $pod -|sed 's/.eu-west-1.compute.internal//g'|column -t|spc -c ~/.local/bin/spc.rc
rm $pod $map $nodes $age.pre $age
